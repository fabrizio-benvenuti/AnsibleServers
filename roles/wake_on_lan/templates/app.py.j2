import eventlet
eventlet.monkey_patch()

from flask import Flask, render_template, redirect, url_for, request, flash
from flask_socketio import SocketIO, emit
from flask_login import LoginManager, login_user, logout_user, login_required, UserMixin, current_user
from subprocess import Popen, PIPE
import os
from auth import users, validate_user
from monitor import monitor_servers, get_server_status, start_script_for_server

app = Flask(__name__)
app.secret_key = '{{ flask_secret_key }}'
socketio = SocketIO(app)
login_manager = LoginManager(app)

# Redirect unauthorized users to the login page
login_manager.login_view = 'login'

# Dummy user system
class User(UserMixin):
    def __init__(self, id):
        self.id = id

@login_manager.user_loader
def load_user(user_id):
    return User(user_id)

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        if validate_user(request.form['username'], request.form['password']):
            user = User(request.form['username'])
            login_user(user)
            return redirect(url_for('index'))
        flash('Invalid credentials. Please try again.', 'error')
        return redirect(url_for('login'))
    return render_template('login.html')

@app.route('/logout')
def logout():
    logout_user()
    return redirect(url_for('login'))

@app.route('/')
@login_required
def index():
    return render_template('index.html')

@socketio.on('get_status')
def send_status():
    emit('status_update', get_server_status())

@socketio.on('disconnect')
def handle_disconnect():
    print(f"Client disconnected: {request.sid}")

@socketio.on('run_command')
def handle_run_command(data):
    server = data['server']
    action = data['action']  # "on" or "off"
    start_script_for_server(server, action, socketio)

if __name__ == '__main__':
    monitor_thread = socketio.start_background_task(monitor_servers)
    socketio.run(app,
                 host='0.0.0.0',
                 port=8443,
                 certfile='/opt/webserver/cert.pem',
                 keyfile='/opt/webserver/key.pem')
